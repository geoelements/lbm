version: 2.0
jobs:
  dev:
    docker:
      - image: quay.io/geoelements/lbm-gpu
    steps:
      - checkout
      # CUDA
      - run:
          name: CUDA
          command: |
            mkdir -p build
            [ "$(ls -A build)" ] && rm -rf build/*
            cd build
            cmake ..
            make -j2 VERBOSE=1
            ./lbmtest
  cppcheck:
    docker:
      - image: quay.io/geoelements/lbm-gpu
    steps:
      - checkout
      - run:
          name: cppcheck/clang-format
          command: |
            cppcheck --version
            cppcheck --inline-suppr --enable=warning --inconclusive --force --language=c++ --std=c++11 src/*.cc include/*.h tests/*.cc --error-exitcode=1
      # clang-format
      - run:
          name: clang-format
          command: |
            python ./clang-tools/run-clang-format.py -r include/* src/* tests/*
  codecov:
    docker:
      - image: quay.io/geoelements/lbm-gpu
    steps:
      - checkout

      # codecoverage
      - run:
          name: codecov.io
          command: |
            mkdir -p build
            [ "$(ls -A build)" ] && rm -rf build/*
            cd build
            cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DENABLE_COVERAGE=On ..
            make lbmtest_coverage -j2
            ./lbmtest_coverage
            lcov --directory . --capture --output-file coverage.info
            bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"


workflows:
    version: 2
    build:
        jobs:
            - dev
            - cppcheck
            - codecov
